POSTGRESQL 15 INSTALL 

sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
sudo yum install -y postgresql15-server
sudo systemctl stop postgresql-15
sudo systemctl disable postgresql-15
sudo rm -fr /var/lib/pgsql/15/data



sudo dnf install epel-release >> TÜM SUNUCULARA KURULMASI LAZIMDIR ! AYNI PAKET 2 SUNUCU İÇİNDE KURULMASI LAZIM 

sudo dnf install python3 python3-pip -y
sudo dnf install python3-pip python3-devel libpq-devel -y
sudo pip3 install --upgrade pip
sudo -H pip3 install --upgrade testresources
sudo -H pip3 install --upgrade setuptools
sudo -H pip3 install psycopg2
sudo -H pip3 install patroni
sudo -H pip3 install python-etcd


1.SUNUCU İÇİN

vim /etc/patroni.yml


# Server_1
scope: postgres
namespace: /db/
name: patronidb1

restapi:
    listen: 192.168.2.10:8008
    connect_address: 192.168.2.10:8008

etcd:
    host: 192.168.2.12:2379

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true

    initdb:
    - encoding: UTF8
    - data-checksums
    
    pg_hba:
    - host replication replicator 127.0.0.1/32 md5
    - host replication replicator 192.168.2.10/0 md5
    - host replication replicator 192.168.2.11/0 md5
    - host all all 0.0.0.0/0 md5
    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb
postgresql:
    listen: 192.168.2.10:5432
    connect_address: 192.168.2.10:5432
    data_dir: /data/patroni
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: ibrahim
            password: rootroot
        superuser:
            username: postgres
            password: Welcome1!
    parameters:
        unix_socket_directories: '.'
tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false


sudo mkdir -p /data/patroni
sudo chown postgres:postgres /data/patroni/
sudo chmod 700 /data/patroni/

vi /etc/systemd/system/patroni.service
[Unit]
Description=Runners to orchestrate a high-availability PostgreSQL
After=syslog.target network.target

[Service]
Type=simple

User=postgres
Group=postgres

ExecStart=/usr/local/bin/patroni /etc/patroni.yml
KillMode=process
TimeoutSec=30
Restart=no

[Install]
WantedBy=multi-user.targ

sudo systemctl daemon-reload
sudo systemctl enable patroni 
sudo systemctl enable postgresql
sudo systemctl start patroni
sudo systemctl start postgresql

# Patroni service status
sudo systemctl status patroni.service

sudo patronictl -c /etc/patroni.yml list


2.SUNUCU İÇİN

vim /etc/patroni.yml


# Server_1
scope: postgres
namespace: /db/
name: patronidb1

restapi:
    listen: 192.168.2.11:8008
    connect_address: 192.168.2.11:8008

etcd:
    host: 192.168.2.12:2379

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true

    initdb:
    - encoding: UTF8
    - data-checksums
    
    pg_hba:
    - host replication replicator 127.0.0.1/32 md5
    - host replication replicator 192.168.2.10/0 md5
    - host replication replicator 192.168.2.11/0 md5
    - host all all 0.0.0.0/0 md5
    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb
postgresql:
    listen: 192.168.2.11:5432
    connect_address: 192.168.2.11:5432
    data_dir: /data/patroni
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: ibrahim
            password: rootroot
        superuser:
            username: postgres
            password: Welcome1!
    parameters:
        unix_socket_directories: '.'
tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false


sudo mkdir -p /data/patroni
sudo chown postgres:postgres /data/patroni/
sudo chmod 700 /data/patroni/

vi /etc/systemd/system/patroni.service

[Unit]
Description=Runners to orchestrate a high-availability PostgreSQL
After=syslog.target network.target

[Service]
Type=simple

User=postgres
Group=postgres

ExecStart=/usr/local/bin/patroni /etc/patroni.yml
KillMode=process
TimeoutSec=30
Restart=no

[Install]
WantedBy=multi-user.targ

sudo systemctl daemon-reload
sudo systemctl enable patroni 
sudo systemctl enable postgresql
sudo systemctl start patroni
sudo systemctl start postgresql

# Patroni service status
sudo systemctl status patroni.service

sudo patronictl -c /etc/patroni.yml list
